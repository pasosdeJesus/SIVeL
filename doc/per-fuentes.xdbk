<?xml version="1.0" encoding="UTF-8"?>
<sect1 id="modificaciones-fuentes">
	<title>Modificaciones a las fuentes</title>

	<para>Aunque modificar las fuentes de SIVeL, como con cualquier otro
		proyecto requiere previo estudio de estas, algunos detalles 
		facilitarán la labor: se emplean estándares de programación;
		se cuenta con pruebas de regresión 
		(ver <xref linkend="pruebas-regresion"></xref>)
		que facilitan la detección de errores que 
		podrían introducirse al modificar las fuentes; se emplean 
		librerías estándares de Pear (resaltamos 
		<filename>DB_DataObject_FormBuilder</filename>).
	</para>

	<sect2 id="estandares">
		<title>Estándares de programación</title>
		<para>En cuanto a base de datos se emplea SQL estándar con
			nomenclatura de tablas en síngular y campo llave único 
			de nombre <literal>id</literal>; los nombres de tablas 
			no llevan espacio ni _, excepto tablas que relacionan 
			otras 2 en cuyo caso se separan las tablas ordenadas 
			alfabéticamente separadas con '_' como sugieren las 
			convenciones de CakePHP 
			(ver <xref linkend="nomcakephp"></xref>.  Los nombres 
			de campos no llevan espacios ni _, excepto que una
			llave foranea de la tabla <literal>t</literal>
			puede ser <literal>id_tabla</literal>
			--aunque un campo que referencie llave de otra tabla 
			puede tener un nombre diferente cuando se requiera 
			aclarar.
			Para las partes en PHP se emplean estándares de PEAR 
			(ver <xref linkend="pearcs"></xref>) ampliados
			con reglas de nomenclatura de silverorange 
			(ver <xref linkend="nomenclaturaphp"></xref> y 
			personalización de estándar en 
			<filename>herram/estandares.xml</filename>).
			Los estándares de PEAR se verifican 
			con la herramienta <literal>phpcs</literal>
			del paquete PHP_CodeSniffer (ver
			<xref linkend="phpcs"></xref>), el cual puede 
			instalarse con:
			<screen>
sudo pear install PHP_CodeSniffer
			</screen>
			y una vez instalado puede verificarse con:
			<screen>
herram/estandares.sh
			</screen>
			Los errores quedarán en el archivo 
			<filename>/tmp/e</filename>.
		</para>
		<para>Las fuentes en Javascript seguirán la guía de éstilo de
			Google <xref linkend="javascriptgoogle"></xref></para>
	</sect2>


	<sect2 id="documentacion-tecnica">
		<title>Documentación técnica</title>
		<para>Siguiendo el estándar adoptado para PHP, las fuentes 
			incluyen comentarios que permiten 
			generar documentación técnica con la herramienta 
			<literal>phpdoc</literal> (ver 
			<xref linkend="phpdoc"></xref>), la cual típicamente 
			se instala desde la línea de comandos con:
			<screen>
sudo pear install PHPDocumentor
			</screen>
			Esta herramienta requiere bastante memoria por lo 
			que se sugiere verificar en 
			<filename>/var/www/conf/php.inf</filename> que
			<literal>memory_limit</literal> sea por lo 
			menos <literal>256M</literal>.

			La documentación de SIVeL se genera con:
			<screen>
make tecdoc
			</screen>
			El resultado queda en el directorio 
			<filename>pdoc</filename> o puede consultarse en
			<ulink url="&URLSITE;/tec/"/>.
		</para>
	</sect2>

	<sect2 id="documentacion-usuario">
		<title>Documentación de usuario</title>
		<para>Se emplea DocBook con las facilidades de 
			repasa<footnote><para>Puede sincronizar con las 
					facilidades más recientes ejecutando 
					<literal>DREPASA=/hoome/miusuario/structio/repasa herram/fixldevdbrep.sh</literal> 
					cambiando la ubicación de las fuentes 
					de repasa en la variable 
					<literal>DREPASA</literal>.</para></footnote>.  
			Está disponible en formato HTML en 
			<ulink url="http://sivel.sf.net"></ulink>.</para>
		<para>
			Para generarla a partir de fuentes primero configure 
			con:
			<screen>
cd doc
./conf.sh
			</screen>
			y si cuenta con todas las herramientas necesarias 
			generela con
			<screen>
make
			</screen>
			Puede consultar más documentación sobre las fuentes y 
			el desarrollo de esta documentación en 
			<filename>doc/Leame.txt</filename> 
			y <filename>doc/Desarrollo.txt</filename>
		</para>
	</sect2>

	<sect2 id="arquitectura">
		<title>Arquitectura de la Aplicación</title>
		<para>Se trata de una aplicación web modular y orientada a 
			objetos cuyos roles se identifican en 
			la sección <xref linkend="recurso-humano"></xref>. 
			Un esobozo de arquitectura se presenta en la siguiente 
			figura (completamos los diagramas de 
			<xref linkend="infraestructura-tecnologica"></xref>).
		</para>
		<informalfigure>
			<screenshot><mediaobject><imageobject>
						<imagedata fileref="arqseg.eps" format="EPS" scale="40" align="center"></imagedata></imageobject>
					<imageobject><imagedata fileref="arqseg.png" format="PNG" align="center"></imagedata></imageobject>
					<textobject><phrase>Esbozo de Arquitectura</phrase></textobject></mediaobject>
			</screenshot>
		</informalfigure>
	</sect2>

	<sect2 id="controlversiones">
		<title>Control de versiones</title>
		<para>Las fuentes de la aplicación se mantienen en un
			repositorio CVS amablemente mantenido por SourceForge y
			utilizable públicamente en modo de sólo lectura.
		</para>
		<para>
			Los usuarios anonimos puede extraer fuentes de sólo 
			lectura con:
			<screen>
cvs -z3 -danonymous@sivel.cvs.sourceforge.net:/cvsroot/sivel co -rSIVEL1_1 sivel
			</screen>
			Los desarrolladores pueden extraer las fuentes de
			lectura/escritura como se presenta a continuación
			(remplace <literal>miusuario</literal> por su 
			identificación en SourceForge):
			<screen>
cvs -z3 -dmiusuario@sivel.cvs.sourceforge.net:/cvsroot/sivel co -rSIVEL1_1 sivel
			</screen>
			o una vez con las fuentes pueden establecerse las 
			variables CVSROOT y CVS_RSH con la utilidad 
			<filename>pcvs.sh</filename>:
			<screen>
./pcvs.sh
cvs -z3 co sivel
			</screen>
		</para>
		<para>La rama de las versión 1.1 es: 
			"<literal>SIVEL1_1</literal>".
			La versión en desarrollo está en la rama 
			"<literal>HEAD</literal>".
		</para>
	</sect2>
	<sect2 id="fuentes">
		<title>Organización de fuentes</title>
		<para>Las extensiones empleadas a lo largo de las fuentes son:
			<itemizedlist>
				<listitem>
					<para>.htaccess: Para controlar opciones
						de Apache y típicamente evitar 
						listar directorios desde el 
						web.</para>
				</listitem>
				<listitem>
					<para>.awk: programa para awk usado 
						desde línea de comandos.</para>
				</listitem>
				<listitem>
					<para>.bitacora: Bitacora de pruebas 
						de regresión.</para>
				</listitem>
				<listitem>
					<para>.css: Hoja de estilos en cascada 
						CSS usado desde interfaz HTML.
					</para>
				</listitem>
				<listitem>
					<para>.copia: Copia de respaldo. </para>
				</listitem>
				<listitem>
					<para>.dsl: Hoja de estilos DSSL 
						usado para generar documentación
						a partir de fuentes en DocBook.
					</para>
				</listitem>
				<listitem>
					<para>.empty: Archivo de configuración 
						de fuentes con valores por 
						defecto.</para>
				</listitem>
				<listitem>
					<para>.ent: Entidades para parametrizar 
						fuentes de documentación en 
						Docbook.</para>
				</listitem>
				<listitem>
					<para>.espreg: Resultado esperado en 
						prueba de regresión.</para>
				</listitem>
				<listitem>
					<para>.gif: Formato para animaciones 
						mientras apng o mpg son mejor 
						soportados.</para>
				</listitem>
				<listitem>
					<para>.grep: Patrones por buscar con 
						<literal>grep</literal>.</para>
				</listitem>
				<listitem>
					<para>.html: Documento HTML, partes de 
						la interfaz web.</para>
				</listitem>
				<listitem>
					<para>.ico: Icono para presentar en 
						sitio web.</para>
				</listitem>
				<listitem>
					<para>.ini: Configuración de base 
						de datos.</para>
				</listitem>
				<listitem>
					<para>.ispell: Diccionario para ispell.
					</para>
				</listitem>
				<listitem>
					<para>.jpg: Formato gráfico con 
						pérdidas y alta compresión.
					</para>
				</listitem>
				<listitem>
					<para>.js: Fuente en Javascript.</para>
				</listitem>
				<listitem>
					<para>.mak y Makefile: Archivos para 
						construir aplicaciones o 
						distribuciones o documentación.
					</para>
				</listitem>
				<listitem>
					<para>.odt: Documentación en Open 
						Document Format.
					</para>
				</listitem>
				<listitem>
					<para>.php: Fuente en PHP, la mayoría 
						para ser empleadas desde la 
						aplicación web, aunque por 
						ejemplo las pruebas de 
						regresión se ejecutan desde la 
						línea de comandos.
					</para>
				</listitem>
				<listitem>
					<para>.plantilla: Fuente en PHP con 
						variables de configuración 
						por defecto.</para>
				</listitem>
				<listitem>
					<para>.png: Formato gráfico sin 
						perdidas.</para>
				</listitem>
				<listitem>
					<para>.sed: Instrucciones para el 
						Stream Editor sed.</para>
				</listitem>
				<listitem>
					<para>.selenio: Pruebas de regresión 
						para Selenium.</para>
				</listitem>
				<listitem>
					<para>.sh: Archivos de comandos para 
						ser ejecutados por el 
						interprete de comandos.
					</para>
				</listitem>
				<listitem>
					<para>.sql: Instrucciones SQL para un 
						motor de bases de datos que 
						soporte ese estándar.</para>
				</listitem>
				<listitem>
					<para>.svg: Gráficas en formato 
						vectorial.</para>
				</listitem>
				<listitem>
					<para>.txt: Documentación como texto 
						plano.</para>
				</listitem>
				<listitem>
					<para>.xdbk: Fuentes de documentación 
						en DocBook XML.</para>
				</listitem>
				<listitem>
					<para>.xml: Archivo de configuración 
						en XML.</para>
				</listitem>
				<listitem>
					<para>.xrlt: Relato en XML en formato 
						del SINCODH.</para>
				</listitem>
				<listitem>
					<para>.xsl: Hoja de estilo XSL.</para>
				</listitem>
			</itemizedlist>
		</para>
		<sect3 id="fuentes-herramientas">
			<title>Fuentes de herramientas administrativas y de desarrollo</title>
			<para>
Para configurar fuentes se emplea <filename>conf.sh</filename> que proviene
del módulo <literal>devel/confsh</literal> del repositorio CVS de structio
(ver <ulink url="http://structio.sf.net"></ulink>).  
Los archivos
relacionados con esta herramienta se instalan/verifican con el archivo de 
comandos 
<filename>enlaces.sh</filename> de esa herramienta y en el momento de
este escrito son:  
<filename>herram/comdist.mak</filename>,  
<filename>herram/confaux.sh</filename>, 
<filename>herram/misc.sh</filename>, 
<filename>herram/rtest.sh</filename>
<filename>conf.sh</filename> y
<filename>confv.empty</filename>.
			</para>
			<para>
En el directorio <filename>bin</filename> hay algunas herramientas
para realizar operaciones administrativas desde el interprete de 
comandos.  
Puede 
ver la descripción de cada una en <xref linkend="admin2"></xref>.</para>

			<para>
El archivo de comandos
<literal>herram/buscafallas.sh</literal> verifica que se sigan
algunas prácticas seguras en las fuentes.
			</para>
		</sect3>

		<sect3 id="fuentes-pruebas">
			<title>Fuentes de pruebas de regresión</title>
			<para>
Ubicados en directorio sitios/pruebas.  Unas se ejecutan desde la línea
de comandos, las otras --con extensión .selenio--
se ejecutan con Selenium IDE. Vea detalles en 
<xref linkend="pruebas-regresion"></xref>.
			</para>
		</sect3>

		<sect3 id="fuentes-basico">
			<title>Fuentes de SIVeL Básico</title>
			<para>
Ubicadas en directorio principal y en DataObjects.  Los grupos 
principales de las fuentes PHP son: 
(1) DB_DataObject_SIVeL.php y DataObjects/*php  
una clase por cada tabla para modelar un registro; 
(2) captura_caso.php,  buscarGrupo.php, buscarPersona.php, 
eliminar_caso.php y Pag*php que corresponden a pestañas de la ficha de 
captura; 
(3) consulta_web.php, consulta_web_cat.php, consulta_web_correo.php y
ResConsulta.php para realizar consultas
detallada y web;
(4) consolidado.php y ResConsulta.php para generar reportes;
(5) tablas_basicas.php, tabla.php, detalle.php para administrar 
tablas básicas;
(6) usyroles.php, detus.php para administrar usuarios;
(7) misc.php, misc_caso.php, misc_actualiza.php y opcion.php con funciones
auxiliares empleadas a lo largo de las fuentes;
(8) importaRelato.php, actualiza.php, completaActos.php, verifica.php que
realizan las operaciones del menú Otros;
(9) index.php, PresentaMenuPrincipal.php con el menú principal.
			</para> 
		</sect3>
		<sect3 id="fuentes-sitios">
			<title>Fuentes de Sitios</title>
			<para>
La posiblidad de hacer instalación multisitio y de crear
nuevos módulos (inspirado en Drupal) facilita la 
separación de las fuentes
genéricas de las fuentes personalizadas.  
De esta forma incluso en algunas personalizaciones 
profundas podrá actualizar sólo SIVeL genérico.
			</para>
			<para>
Cada sitio debe ser un directorio dentro del 
directorio <filename>sitios</filename> y debe
contar con enlaces por cada forma en la que puede ingresarse
al sitio.  Por ejemplo si ha configurado Apache para
ingresar como http://127.0.0.1/misivel debe tener
un enlace al directorio del sitio de nombre
<filename>127.0.0.1_MISIVEL</filename>.
			</para>
		</sect3>

		<sect3 id="fuentes-modulos">
			<title>Fuentes de Módulos</title>
			<para>
Cada módulo se ubica en un directorio al interior
del directorio <filename>modulo</filename>.  
Vea más adelante los archivos que componen un módulo.</para>
		</sect3>

	</sect2>

	<sect2 id="interfaz">
		<title>Interfaz</title>
		<para>
La interfaz se desarrolló en PHP (ver <xref linkend="php"></xref>) 
empleando diversas librerías de Pear (ver <xref linkend="pear"></xref>),
entre las que destacamos:
			<variablelist>
				<varlistentry><term><literal>DB_DataObject_FormBuilder</literal></term>
					<listitem>
						<para>
Que permite generar formularios semiautomáticamente a partir de 
objetos <literal>DB_DataObject</literal> 
empleando algún sistema de presentación como
<literal>HTML_QuickForm</literal> (ver
<xref linkend="dbdataobjectformbuilder"></xref>).
						</para>
					</listitem>
				</varlistentry>
				<varlistentry><term><literal>DB_DataObject</literal></term>
					<listitem>
						<para>
Que abstrae una base de datos SQL, identificando tablas con clases y
registros con objetos (ver <xref linkend="dbdataobject"></xref>).
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</para>
		<para>
Se empleo programación orientada a objetos, las clases y su jerarquía
pueden verse en la documentación técnica (ver
<xref linkend="documentacion-tecnica"></xref>) 
		</para>
	</sect2>

	<sect2 id="base-de-datos">
		<title>Base de Datos</title>
		<para>
En cuanto a base de datos la estructura en SQL (ver 
<xref linkend="sqlpost"></xref>) de SIVeL genérico está en el archivo 
<filename>estructura.sql</filename>
y los datos iniciales en archivos con nombres de la forma 
<filename>datos-*.sql</filename>.   A continuación se incluye un grafo extaido 
de <filename>estructura.sql</filename> y generado
con GraphViz (ver <xref linkend="graphviz"></xref>).
		</para>
		<informalfigure>
			<screenshot><mediaobject><imageobject>
						<imagedata fileref="estructura.eps" format="EPS" scale="40" align="center"></imagedata></imageobject>
					<imageobject><imagedata fileref="estructura.png" format="PNG" align="center"></imagedata></imageobject>
					<textobject><phrase>Estructura de la Base de Datos</phrase></textobject></mediaobject>
			</screenshot>
		</informalfigure>

	</sect2>
	<sect2 id="separacion-de-fuentes-genericas-de-personalizadas">
		<title>Separación de fuentes genéricas de las personalizadas</title>
		<para>
Para hacer una personalización se sugiere iniciar un nuevo sitio,  digamos
<literal>sitios/sivelper</literal>, que puede crear con 
			<screen>
cd sitios
./nuevo.sh sivelper
			</screen> 
Este archivo de comandos creará el directorio con los 
archivos
que requiere para comenzar y generará una nueva base de
datos <literal>sivelper</literal>.
		</para>


		<para>
Por su parte un nuevo módulo se puede iniciar por ejemplo en 
<literal>modulos/nuevomod</literal>
		</para>
		<para>
La estructura de un sitio y de un módulo es 
la misma, ambos tienen algunos archivos que son
puntos de unión con el SIVeL genérico:
			<variablelist>
				<varlistentry><term><filename>sitios/sivelper/estructura.sql</filename></term>
					<listitem><para>
Donde declara en SQL las nuevas tablas, secuencias y elementos estructurales 
de la base de datos.  Este archivo será ejecutado en nuevas instalaciones 
de su personalización cuando se cree la base de datos.
					</para></listitem>
				</varlistentry>
				<varlistentry><term><filename>sitios/sivelper/datos.sql</filename></term>
					<listitem><para>
Donde inserta en SQL datos 
iniciales para las tablas de SIVeL y su personalización. 
Se ejecuta durante la creación de la base de datos, después de que se ha
ejecutado <filename>sitios/sivelper/estructura.sql</filename>.  En este archivo
también debe incluir las actualizaciones de
<filename>sitios/sivelper/actualiza.php</filename>. 
					</para></listitem>
				</varlistentry>
				<varlistentry><term><filename>sitios/sivelper/prepara-indices.sql</filename></term>
					<listitem><para>
Que actualiza índices definidos en 
<filename>estructura.sql</filename> a los máximos valores usados
en las tablas o al mínimo de datos personalizados
en casos de tablas básicas.  
					</para></listitem>
				</varlistentry>

				<varlistentry><term><filename>sitios/sivelper/actualiza.php</filename></term>
					<listitem><para>
Este se ejecutará cuando desde la interfaz web 
el usuario solicite actualizar, por lo que recomendamos que cree
las mismas bases de datos de <filename>sitios/estructura.sql</filename> e
incluya los mismos datos de <filename>sitios/datos.sql</filename>.  
A medida que desarrolle su personalización/módulo podrá realizar
cambios a la base de datos añadiendolos como actualizaciones a este archivo.
Por esto, en este archivo queda una historia de la personalización/módulo.
Incluso desde este puede modificar tablas o datos que no son de
su personalización, aunque no es recomendable y de requerirlo 
se sugiere seguir las indicaciones antes dadas para personalizaciones
de las fuentes genéricas (por ejemplo deshabilitar registros de tablas
básicas en lugar de borrarlos).
					</para></listitem>
				</varlistentry>
			</variablelist> 
Como el propósito de los archivos 
<filename>sitios/sivelper/estructura.sql</filename> y 
<filename>sitios/sivelper/datos.sql</filename> es inicializar
nuevas bases de datos, estos deben reflejar el estado
final de las tablas que maneja la personalización después de ejecutar 
<filename>sitios/sivelper/actualiza.php</filename>, pero estos
archivos no incluyen la historia de cambios que si debe estar presente en 
<filename>sitios/sivelper/actualiza.php</filename> para poder actualizar
instalaciones con versiones previas.   El archivo 
<filename>sitios/sivelper/prepara-indices.sql</filename> será ejecutado 
tanto al inicializar una base como al actualizar.
		</para>

		<para>
Si su personalización consiste en nuevos reportes
que no modifican ni requieren nueva información en bases
de datos, basta que cree nuevas fuentes en PHP y las referencie
desde nuevas opciones del menú (incluyendolas desde
<filename>sitios/sivelper/datos.sql</filename> y 
también desde
<filename>sitios/sivelper/actualiza.php</filename>), tal como hace el 
módulo <filename>modulos/estrotulos</filename>.
		</para>
		<para>
Si su personalización maneja nuevos datos, se sugiere que
lo haga en tablas nuevas (de requerirlo piense en extender
tablas existentes usando la misma llave primaria en la
nueva tabla), las nuevas clases descendientes de
<literal>DB_DataObject</literal> 
ubiquelas en el directorio <literal>DataObjects</literal> 
de su personalización (e.g 
<filename>sitios/sivelper/DataObjects</filename>).
Para agregar una nueva tabla  tenga en cuenta:
			<itemizedlist>
				<listitem>
					<para>
Agregue la definición en
<filename>sitios/sivelper/estructura.sql</filename>.   Si agrega una tabla básica hagála descendiente de 
<filename>DataObjects/Basica.php</filename> 
que incluirá los campos 
<literal>id</literal>, 
<literal>nombre</literal>, 
<literal>fechacreacion</literal> y 
<literal>fechadeshabilitacion</literal>.
					</para>
				</listitem>
				<listitem>
					<para>Agregue código que cree las nuevas
tablas y los nuevos datos en <filename>sitios/sivelper/actualiza.php</filename>
como un bloque digamos 
con identificación <literal>mip-1</literal>.
En instalaciones que ya operan de SIVeL este es el código que efectivamente 
será utilizado para activar su personalización.
				</para></listitem>
				<listitem>
					<para>
Agregue datos en <filename>sitios/sivelper/datos.sql</filename>
así como registros en la tabla <literal>ActualizacionBase</literal> con
la(s) identificación(es) que haya agregado
en <filename>sitios/sivelper/actualiza.php</filename> (en
este ejemplo <literal>mip-1</literal>); esto lo puede hacer
brevement con la función <literal>aplicaact</literal>.
Si añadió índices
(por ejemplo para tablas básicas) añada actualización
para este en
<filename>prepara_indice.sql</filename>, eventualmente
con un índice máximo para datos reservados (las
personalizaciones emplearan índices superiores).
					</para>
				</listitem>
				<listitem>
					<para>
Agregue llaves de las nuevas tablas en 
<filename>sitios/sivelpear/DataObjects/estructura-dataobject.ini</filename> e 
integridad referencial 
en <filename>sitios/sivelpear/DataObjects/estructura-dataobject.links.ini</filename> --en 
el primero los códigos resultan de la
suma de:
						<screen>
1 INTEGER
2 VARCHAR o TEXT
4 DATE
8 TIME
16 BOOLEAN
32 LOG TEXT
64 BLOB
128 NOT NULL
						</screen>
					</para>
					<para>
A partir de estos archivos junto con los
de SIVeL básico y los de otros módulos se crean
los archivos  de un sitio tanto
al actualizar con actualiza.php como desde la
línea de comandos con el script 
<filename>bin/creaesquema.sh</filename> que
debe ejecutarse desde el directorio del sitio.
					</para>
				</listitem>
				<listitem>
					<para>
En el directorio <filename>sitios/sivelper/DataObjects</filename> cree un 
archivo con datos de tabla como 
descendiente bien
de <filename>DataObjects/Basica.php</filename> (si es
tabla básica, ver por ejemplo <filename>Etnia.php</filename>) o de 
<filename>DB_DataObject_SIVeL.php</filename>
(ver por ejemplo <filename>Profesion_comunidad.php</filename>).
El nombre 
debe ser el mismo de la tabla pero con la primera letra 
mayúscula y las demás minúsculas.   Se recomienda
consultar documentación de clases base
mencionadas.
					</para>
				</listitem>			
				<listitem>
					<para> 
Las tablas básicas se declaran en el arreglo
<literal>menu_tablas_basicas</literal> que 
se define en  el archivo de
configuración de cada sitio
<literal>conf.php</literal>, este arreglo
puede ser completado durante la ejecución.
Entonces si tiene información parametrizable 
como para una tabla básica, debe tener una 
nueva pestaña o una
extensión de una pestaña existente en la que declare
la función <literal>actGlobales()</literal> que añada la tabla a las
básicas.  Vea un ejemplo en el módulo
<filename>modulos/etiquetas/PagEtiqueta.php</filename>
que añade la tabla básica <literal>Etiqueta</literal> cuando 
se activa el módulo.   Una vez agregue la agregue puede probar
inserción, eliminación de registros desde el menú
<menuchoice><guimenu>Administración</guimenu><guimenuitem>Tablas Básicas</guimenuitem></menuchoice>.
					</para>
				</listitem>
			</itemizedlist>

		</para>
		<para>
La nueva información la puede solicitar en una nueva
pestaña del formulario de captura como puede ver
a manera de ejemplo en el módulo etiquetas y en particular en
<filename>modulos/etiquetas/PagEtiquetas.php</filename>
		</para>
		<para>
Es posible extender pestañas de la ficha de captura o
refinar la forma como se generar para incluir nuevos
campos.  Un ejemplo lo puede ver en el módulo anexos
en <filename>modulos/anexos/PagFrecuenteAnexo.php</filename>
que extiende la pestaña Fuentes Frecuentes, así como
la tabla subyacente (<literal>Escrito_caso</literal>).
		</para>
		<para>
Algunas recomendaciones para crear o extender pestañas son:
			<itemizedlist>
				<listitem>
					<para>
Cada pestaña corresponde a un archivo con una clase que extiende 
<literal>PagBaseSimple</literal> o 
<literal>PagBaseMultiple</literal> o una pestaña existente.  El nombre 
comienza con <literal>Pag</literal> (<filename>PagMemo.php</filename> 
es uno simple para comenzar). También puede ver la 
descripción de las funciones por definir en <literal>PagBaseSimple</literal> 
(ver <ulink url="&URLSITE;/tec/">documentación técnica</ulink>)
					</para>
				</listitem>
				<listitem>
					<para>
Algunos detalles de la presentación de la información de una pestaña se 
determinan en las clases que corresponden a tablas, 
y que son descendientes de <filename>DB_DataObject</filename>.  Los detalles 
por cuadrar los específica la librería 
<filename>DB_DataObject_FormBuilder</filename>.  En estas mismas clases puede 
cuadrar otros detalles con las funciones <literal>preGenerateForm</literal>
y <literal>postGenerateForm</literal> que se llaman antes y después
de generar el formulario.
					</para>
				</listitem>
				<listitem>
					<para>
Si necesita agregar o eliminar pestañas asegure que se referencian las 
pestañas en el orden que se desean en la variable 
<literal>ficha_tabuladores</literal> 
de <filename>sitios/sivelper/conf.php</filename>.</para></listitem>
			</itemizedlist>
		</para>
		<para>
Como orden posible para realizar pruebas después de hacer cambios se sugiere:
			<orderedlist>
				<listitem>
					<para>
Vea que la interfaz sea como la espera modificando
la constructora de la clase y
las funciones <literal>iniVar</literal>,
<literal>nullVar</literal>,
<literal>formularioAgrega</literal> y
<literal>formularioValores</literal>.</para>
				</listitem>
				<listitem>
					<para>
Verifique que se procesen los datos examinando la 
base de datos después de cambiarse de pestaña
en la función <literal>procesa</literal>.  
Note que tras procesar cada
pestaña debe llamarse la función 
<literal>caso_usuario</literal>
					</para>
				</listitem>
				<listitem>
					<para>
Agregue instrucciones para eliminar en las funciones
<literal>eliminaDep</literal> y
<literal>elimina</literal>.
					</para>
				</listitem>
				<listitem>
					<para>
Agregue información para búsquedas desde Consulta
Web en la función <literal>datosBusqueda</literal>.
					</para>
				</listitem>
				<listitem>
					<para>
Agregue método para exportar a relato (seguramente
en observaciones) en la función
<literal>aRelato</literal>, así como para importar
en la función <literal>importa</literal>.
					</para>
				</listitem>

			</orderedlist>
		</para>
		<para>
Puede resultar convenientes activar mensajes de depuración
de DataObject poniendo en 5 la opción '<literal>debug</literal>' en el 
archivo <filename>sitios/sivelper/conf.php</filename>
		</para>

	</sect2>

</sect1>
